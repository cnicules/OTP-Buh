<project name="btp" default="build" basedir=".">
  <description>Bucharest Trip Planner</description>
  <property name="product.name" value="Bucharest Trip Planner"/>
  <property name="product.version" value="v0.2"/>
  <property name="product.abbr" value="btp"/>

  <!-- directories -->

  <!-- use forward slashes in path in messages
       because backslashes must be doubled in .properties file -->
  <pathconvert property="base.dir" dirsep="/">
    <path location="${basedir}"/>
  </pathconvert>

  <property name="dl.dir" value="${base.dir}/downloads"/>

  <property name="build.dir" value="${base.dir}/build"/>
  <property name="matches.build.dir" value="${build.dir}/stops-matched"/>

  <property name="target.dir" value="${base.dir}/target"/>
    
  <!-- defines osmosis.home.dir, otp.home.dir -->
  <property file="${base.dir}/build.properties"/>


  <!-- requires ant-contrib tasks: post-method, for-each -->
  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <import file="build-osm.xml"/>
  <import file="build-metrorex.xml"/>
  <import file="build-ratbtram.xml"/>
  <import file="build-ratbtrob.xml"/>
  <import file="build-ratbubus.xml"/>
  <import file="build-otp.xml"/>
  <import file="build-stops-matched.xml"/>
  <import file="build-tomcatmgr.xml"/>

  <target name="build" depends="otp-build-graph"
    description="build OpenTripPlanner graph">
    <echo>After successful build, 
      (Re)Start server (see README-INSTALL.txt #5).

      To use server, open web browser to:
        http://localhost:8080/opentripplanner-webapp/index.html
    </echo>
  </target>

  <target name="build-reload" depends="otp-build-graph,otp-api-reload"
    description="build OpenTripPlanner graph, reload api app on Tomcat">
    <echo>To use server, open web browser to:
        http://localhost:8080/opentripplanner-webapp/index.html
    </echo>
  </target>

  <target name="clean" depends="otp-clean"
    description="remove generated files (not downoaded files)">
    <delete dir="${build.dir}" quiet="true"/>
    <delete dir="${target.dir}" quiet="true"/>
  </target>

  <target name="compile-java">
    <mkdir dir="${build.dir}/classes"/>
    <javac srcdir="${base.dir}/src/main/java"
      destdir="${build.dir}/classes"
      includeantruntime="false" debug="true"/>
  </target>

  <target name="javadoc" description="Generate java code doc in target/javadoc">
    <delete dir="${target.dir}/javadoc" quiet="true"/>
    <mkdir  dir="${target.dir}/javadoc"/>
    <tstamp><format pattern="d MMM yyyy" property="today"/></tstamp>
    <javadoc destdir="${target.dir}/javadoc"
             windowtitle="${product.name} ${product.version}"
             bottom="${product.abbr} ${product.version} (${today})">
      <sourcefiles>
        <fileset dir="${base.dir}/src/main/java/" includes="*.java"/>
      </sourcefiles>
    </javadoc>
  </target>

  <target name="datestamp">
    <!-- todayYMD timestamp in YYYYMMDD format-->
    <tstamp><format property="todayYMD" pattern="yyyyMMdd"/></tstamp>
  </target>

  <target name="zip-sources" depends="datestamp"
    description="Zip source code to target/btp-YMD-VER-sources.zip">
    <property name="btp.zip"
      value="${target.dir}/${product.abbr}-${todayYMD}-${product.version}-sources.zip"/>
    <outofdate>
      <targetfiles path="${btp.zip}"/>
      <sourcefiles>
        <fileset dir="${base.dir}/.." includes="btp/README-INSTALL.txt"/>
        <fileset dir="${base.dir}/.." includes="btp/ant.sh"/>
        <fileset dir="${base.dir}/.." includes="btp/ant.cmd"/>
        <fileset dir="${base.dir}/.." includes="btp/build.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-osm.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-osm-geofabrik.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-osm-osmapi.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-osm-fixes.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-metrorex.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-ratbtram.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-ratbtrob.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-ratbubus.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-otp.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-stops-matched.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/build-tomcatmgr.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/java/*.java"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/java/logging.properties"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/osm/*.osm"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/otp/*.patch"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/xslt/*.xslt"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/xml/*.xml"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/xml/*.xhtml"/>
        <fileset dir="${base.dir}/.." includes="btp/src/main/txt/*.txt"/>
      </sourcefiles>
      <sequential>
        <delete file="${btp.zip}" quiet="true"/>
        <mkdir dir="${target.dir}"/>
        <zip destfile="${btp.zip}">
          <fileset dir="${base.dir}/.." includes="btp/README-INSTALL.txt"/>
          <fileset dir="${base.dir}/.." includes="btp/ant.sh"/>
          <fileset dir="${base.dir}/.." includes="btp/ant.cmd"/>
          <fileset dir="${base.dir}/.." includes="btp/build.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-osm.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-osm-geofabrik.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-osm-osmapi.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-osm-fixes.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-metrorex.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-ratbtram.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-ratbtrob.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-ratbubus.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-otp.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-stops-matched.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/build-tomcatmgr.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/java/*.java"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/java/logging.properties"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/osm/*.osm"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/otp/*.patch"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/xslt/*.xslt"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/xml/*.xml"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/xml/*.xhtml"/>
          <fileset dir="${base.dir}/.." includes="btp/src/main/txt/*.txt"/>
        </zip>
	<echo>${btp.zip}</echo>
      </sequential>
    </outofdate>
  </target>
  
  <target name="check-build.properties"> 

    <fail message="Missing build.properties file. &#xA;
      Please create a file ${base.dir}/build.properties &#xA;
      with directory paths where Osmosis and OpenTripPlanner are installed.&#xA;
      The build.properties file should look similar to: &#xA;
        osmosis.home.dir = /PATH-TO-INSTALL-DIR/osmosis-0.39 &#xA;
        otp.home.dir = /PATH-TO-INSTALL-DIR/otp &#xA;
        &#xA;
        # osm.sourceType for bucharest.osm&#xA;
        # 'whole' -- download whole country.osm.pbf; extract bucharest.osm &#xA;
        # 'parts' -- download city parts from api.openstreetmap.org; merge &#xA;
        # 'copy'  -- copy bucharest.osm from bucharest.prepared.osm &#xA;
        osm.sourceType: copy &#xA;
        &#xA;
        # optional, for osm.sourceType copy &#xA;
        bucharest.prepared.osm: ../bucuresti-20110928.osm &#xA;
        &#xA;
        # optional: if defined, merge src/main/osm fixes; &#xA;
        #           to skip, comment it out. &#xA;
        # osm.use-fixes: true">
      <condition>
        <not><available file="${base.dir}/build.properties" type="file"/></not>
      </condition>
    </fail>

    <antcall target="check-dir-property">
      <param name="program.name" value="Osmosis"/>
      <param name="property.name" value="osmosis.home.dir"/>
      <param name="property.value" value="${osmosis.home.dir}"/>
      <param name="sample.value" value="/PATH-TO-INSTALL-DIR/osmosis-0.39"/>
    </antcall>
    <antcall target="check-dir-property">
      <param name="program.name" value="OpenTripPlanner"/>
      <param name="property.name" value="otp.home.dir"/>
      <param name="property.value" value="${otp.home.dir}"/>
      <param name="sample.value" value="/PATH-TO-INSTALL-DIR/otp"/>
    </antcall>
  </target>
  <target name="check-dir-property">
    <!-- parameters: property.name, property.value, sample.value -->

    <fail message="Missing ${property.name} property. &#xA;
      Please define ${property.name} = ${sample.value}&#xA;
      in the ${base.dir}/build.properties file &#xA;
      using the directory path to where ${program.name} is installed.">
      <condition>
        <not><isset property="${property.name}"/></not>
      </condition>
    </fail>     

    <fail message="Empty value: '${property.value}' &#xA;
      Please fix ${property.name} = ${sample.value}&#xA;
      in the ${base.dir}/build.properties file &#xA;
      using the directory path to where ${program.name} is installed.">
      <condition>
        <equals arg1="${property.value}" arg2="" trim="true"/>
      </condition>
    </fail>

    <fail message="Directory does not exist: ${property.value} &#xA;
      Please fix ${property.name} = ${sample.value}&#xA;
      in the ${base.dir}/build.properties file &#xA;
      using the directory path to where ${program.name} is installed.">
      <condition>
        <not><available file="${property.value}"/></not>
      </condition>
    </fail>

    <fail message="Not a directory: ${property.value} &#xA;
      Please fix ${property.name} = ${sample.value}&#xA;
      in the ${base.dir}/build.properties file &#xA;
      using the directory path to where ${program.name} is installed.">
      <condition>
        <not><available file="${property.value}" type="dir"/></not>
      </condition>
    </fail>
  </target>

</project>
