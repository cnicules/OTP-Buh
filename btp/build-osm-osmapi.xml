<project name="btp-osm-osmapi" default="osm-osmapi-merge" basedir=".">
  <!-- This file is imported by build-osm.xml. -->
  <description>
    Create ${build.bucharest.osm} by downloading parts from
    api.openstreetmap.org and merging the parts with Osmosis.
    The parts are disjoint regions from a grid of regions.

    This approach is provided as an alternative source, in case
    api.openstreetmap.org is available and a source for country.osm.pbf
    is not available.

    Benefits:

    (1) The whole city is too large for one api download,
    but downloading smaller part osm files may fit under the bandwidth cap.

    (2) The total city downloads may be smaller than the whole country pbf.

    Caveat: This approach may be fragile.

    (1) The api map method does not retrieve all the members of a relation.
    http://wiki.openstreetmap.org/wiki/API_v0.6#Retrieving_map_data_by_bounding_box:_GET_.2Fapi.2F0.6.2Fmap

    It is not clear whether Osmosis will correctly merge relations with disjoint
    bounding boxes or overwrite them.  It appears to merge them ok -- have not
    noticed any truncated routes so far.
    http://wiki.openstreetmap.org/wiki/Osmosis/Detailed_Usage#--merge_.28--m.29

    (2) The api map method does not recursively retrieve relations containing
    a relation (that contains ways and nodes in a region).  This might occur if
    there is a route relation that contains subroute relations, such as for
    forward and backward.
    (The parent relation should be retrieved if it directly contains
    ways and nodes in the region outside the member child relations.)
    http://wiki.openstreetmap.org/wiki/API_v0.6#Retrieving_map_data_by_bounding_box:_GET_.2Fapi.2F0.6.2Fmap    
  </description>

  <!-- urls -->
  <property name="osm.api.url"
    value="http://api.openstreetmap.org/api/0.6/map"/>
  <!-- grid used to define regions of bucharest -->
  <property name="lat0" value="44.33"/>
  <property name="lat1" value="44.40"/>
  <property name="lat2" value="44.47"/>
  <property name="lat3" value="44.61"/>
  <property name="lon0" value="25.95"/>
  <property name="lon1" value="26.05"/>
  <property name="lon2" value="26.15"/>
  <property name="lon3" value="26.25"/>

  <!-- osmosis.home.dir defined by build.properties -->

  <!--
     *    OpenStreetMap OSM files
   -->
  <!-- downloaded regions, each file size less than api download-size limit -->
  <property name="center.osm"
     value="${osm.dl.dir}/map_lat+${lat1}_+${lat2}_lon+${lon1}_+${lon2}.osm"/>
  <property name="SW-S-SE.osm"
     value="${osm.dl.dir}/map_lat+${lat0}_+${lat1}_lon+${lon0}_+${lon3}.osm"/>
  <property name="W-NW.osm"
     value="${osm.dl.dir}/map_lat+${lat1}_+${lat3}_lon+${lon0}_+${lon1}.osm"/>
  <property name="N.osm"
     value="${osm.dl.dir}/map_lat+${lat2}_+${lat3}_lon+${lon1}_+${lon2}.osm"/>
  <property name="E-NE.osm"
     value="${osm.dl.dir}/map_lat+${lat1}_+${lat3}_lon+${lon1}_+${lon2}.osm"/>

  <target name="osm-osmapi-get-regions"
    description="Get missing region osms from api.OpenStreetMap.org">
    
    <outofdate>
      <targetfiles>
        <pathelement path="${center.osm}"/>
        <pathelement path="${SW-S-SE.osm}"/>
        <pathelement path="${W-NW.osm}"/>
        <pathelement path="${N.osm}"/>
        <pathelement path="${E-NE.osm}"/>
      </targetfiles>
      <sourcefiles/>
      <sequential>
        <mkdir dir="${osm.dl.dir}"/>

        <!-- middle is densest, largest, most likely to fail: do it first -->
        <get src="${osm.api.url}?bbox=${lon1},${lat1},${lon2},${lat2}"
             dest="${center.osm}" skipexisting="true" verbose="on"/>

        <get src="${osm.api.url}?bbox=${lon0},${lat0},${lon3},${lat1}"
             dest="${SW-S-SE.osm}" skipexisting="true" verbose="on"/>

        <get src="${osm.api.url}?bbox=${lon0},${lat1},${lon1},${lat3}"
             dest="${W-NW.osm}" skipexisting="true" verbose="on"/>
        <get src="${osm.api.url}?bbox=${lon1},${lat2},${lon2},${lat3}"
             dest="${N.osm}" skipexisting="true" verbose="on"/>
        <get src="${osm.api.url}?bbox=${lon2},${lat1},${lon3},${lat3}"
             dest="${E-NE.osm}" skipexisting="true" verbose="on"/>
      </sequential>
    </outofdate>
  </target>

  <target name="osm-osmapi-remove-mid">
    <!-- description="Remove central Bucharest map to force download" -->
    <delete file="${center.osm}" quiet="true"/>
  </target>
  <target name="osm-osmapi-remove-s">
    <!-- description="Remove SW,S,SE Bucharest map to force download" -->
    <delete file="${SW-S-SE.osm}" quiet="true"/>
  </target>
  <target name="osm-osmapi-remove-w-nw">
    <!-- description="Remove W,NW Bucharest map to force download" -->
    <delete file="${W-NW.osm}" quiet="true"/>
  </target>
  <target name="osm-osmapi-remove-n">
    <!-- description="Remove N. Bucharest map to force download" -->
    <delete file="${N.osm}" quiet="true"/>
  </target>
  <target name="osm-osmapi-remove-e-ne">
    <!-- description="Remove E,NE Bucharest map to force download" -->
    <delete file="${E-NE.osm}" quiet="true"/>
  </target>
  <target name="osm-osmapi-remove-all"
    depends="osm-osmapi-remove-mid,osm-osmapi-remove-s,osm-osmapi-remove-w-nw,osm-osmapi-remove-n,osm-osmapi-remove-e-ne"
    description="Remove downloaded partial maps to force new downloads">
  </target>
  
  <target name="osm-osmapi-merge"
    description="Merge downloaded osms only into bucharest.osm"
    depends="check-build.properties,osm-osmapi-get-regions">

    <outofdate>
      <targetfiles path="${build.bucharest.osm}"/>
      <sourcefiles>
        <pathelement path="${center.osm}"/>
        <pathelement path="${SW-S-SE.osm}"/>
        <pathelement path="${W-NW.osm}"/>
        <pathelement path="${N.osm}"/>
        <pathelement path="${E-NE.osm}"/>
      </sourcefiles>
      <sequential>
        <mkdir dir="${osm.build.dir}"/>

        <java classname="org.codehaus.classworlds.Launcher"
          fork="true" inputstring="" failonerror="true">
          <classpath>
            <fileset dir="${osmosis.home.dir}/lib/default/">
              <include name="plexus-classworlds-*.jar"/>
            </fileset>
          </classpath>
          <sysproperty key="app.home" value="${osmosis.home.dir}"/>
          <sysproperty key="classworlds.conf"
            value="${osmosis.home.dir}/config/plexus.conf"/>

          <arg value="--rx"/> <arg file="${center.osm}"/> <arg value="--sort"/>
          <arg value="--rx"/> <arg file="${SW-S-SE.osm}"/> <arg value="--sort"/>
          <arg value="--merge"/>
          <arg value="--rx"/> <arg file="${W-NW.osm}"/><arg value="--sort"/>
          <arg value="--rx"/> <arg file="${E-NE.osm}"/><arg value="--sort"/>
          <arg value="--merge"/>
          <arg value="--merge"/>
          <arg value="--rx"/> <arg file="${N.osm}"/><arg value="--sort"/>
          <arg value="--merge"/>

          <arg value="--wx"/> <arg file="${build.bucharest.osm}"/>
        </java>
        <echo>${build.bucharest.osm}</echo>
      </sequential>
    </outofdate>
  </target>

</project>